name: CI Pipeline

on:
  push:
    branches:
      - dev
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgis/postgis:14-3.3
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. Install system dependencies (GDAL and PostGIS)
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgdal-dev gdal-bin

      # 4. Set GDAL environment variables for Python build
      - name: Set GDAL environment variables
        run: |
          echo "CPLUS_INCLUDE_PATH=/usr/include/gdal" >> $GITHUB_ENV
          echo "C_INCLUDE_PATH=/usr/include/gdal" >> $GITHUB_ENV

      # 5. Create .env file for Django settings
      - name: Create .env file
        run: |
          echo "DJANGO_ENV=dev" >> $GITHUB_WORKSPACE/.env
          echo "DB_NAME=${{ secrets.PG_DB }}" >> $GITHUB_WORKSPACE/.env
          echo "DB_USER=${{ secrets.PG_USER }}" >> $GITHUB_WORKSPACE/.env
          echo "DB_PASSWORD=${{ secrets.PG_PASSWORD }}" >> $GITHUB_WORKSPACE/.env
          echo "DB_HOST=localhost" >> $GITHUB_WORKSPACE/.env
          echo "DB_PORT=5432" >> $GITHUB_WORKSPACE/.env

      # 6. Install Poetry and dependencies
      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry install

      # 7. Wait for PostgreSQL to be ready
      - name: Wait for PostgreSQL service to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U ${{ secrets.PG_USER }}; do
            sleep 1;
          done

      # 8. Run Django migrations
      - name: Run Django migrations
        run: |
          poetry run python manage.py migrate

      # 9. Run tests with pytest
      - name: Run tests with pytest
        run: |
          poetry run pytest --ds=config.settings.dev --maxfail=5 --disable-warnings --cov=.